In file included from main.cpp:4:
In file included from /usr/include/c++/4.6/future:39:
In file included from /usr/include/c++/4.6/mutex:39:
/usr/include/c++/4.6/chrono:666:7: error: static_assert expression is not an integral constant expression
      static_assert(system_clock::duration::min()
      ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from main.cpp:4:
In file included from /usr/include/c++/4.6/future:44:
In file included from /usr/include/c++/4.6/atomic:40:
/usr/include/c++/4.6/bits/atomic_base.h:163:20: error: non-inline namespace cannot be reopened as inline
  inline namespace _GLIBCXX_ATOMIC_NAMESPACE { }
                   ^
/usr/include/c++/4.6/bits/atomic_base.h:145:36: note: expanded from:
# define _GLIBCXX_ATOMIC_NAMESPACE __atomic2
                                   ^
/usr/include/c++/4.6/bits/atomic_base.h:127:13: note: previous definition is here
  namespace __atomic2
            ^
/usr/include/c++/4.6/bits/atomic_base.h:167:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<char>                   atomic_char;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:170:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<signed char>            atomic_schar;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:173:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<unsigned char>          atomic_uchar;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:176:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<short>                  atomic_short;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:179:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<unsigned short>         atomic_ushort;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:182:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<int>                    atomic_int;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:185:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<unsigned int>           atomic_uint;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:188:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<long>                   atomic_long;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:191:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<unsigned long>          atomic_ulong;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:194:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<long long>              atomic_llong;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:197:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<unsigned long long>     atomic_ullong;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:200:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<wchar_t>                atomic_wchar_t;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:203:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<char16_t>               atomic_char16_t;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:206:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<char32_t>               atomic_char32_t;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:209:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<char32_t>               atomic_char32_t;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:213:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<int_least8_t>           atomic_int_least8_t;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
/usr/include/c++/4.6/bits/atomic_base.h:216:11: error: no template named '__atomic_base'; did you mean '__atomic0::__atomic_base'?
  typedef __atomic_base<uint_least8_t>          atomic_uint_least8_t;
          ^~~~~~~~~~~~~
          __atomic0::__atomic_base
/usr/include/c++/4.6/bits/atomic_base.h:124:14: note: '__atomic0::__atomic_base' declared here
      struct __atomic_base;
             ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
0  libLLVM-3.0.so.1 0x40d3bcc8
1  libLLVM-3.0.so.1 0x40d3c37c
2                   0x40022400 __kernel_sigreturn + 0
3  clang            0x089c0ed6 clang::Expr::hasAnyTypeDependentArguments(clang::Expr**, unsigned int) + 22
4  clang            0x085b9b28 clang::Sema::ActOnCallExpr(clang::Scope*, clang::Expr*, clang::SourceLocation, clang::ASTMultiPtr<clang::Expr*>, clang::SourceLocation, clang::Expr*, bool) + 600
5  clang            0x0846e10f clang::Parser::ParsePostfixExpressionSuffix(clang::ActionResult<clang::Expr*, true>) + 3423
6  clang            0x084671e8 clang::Parser::ParseCastExpression(bool, bool, bool&, bool) + 232
7  clang            0x0846a1dc clang::Parser::ParseCastExpression(bool, bool, bool) + 92
8  clang            0x0846ad1a clang::Parser::ParseAssignmentExpression() + 90
9  clang            0x0846bc72 clang::Parser::ParseExpression() + 50
10 clang            0x0842852f clang::Parser::ParseExprStatement(clang::ParsedAttributes&) + 79
11 clang            0x08423c69 clang::Parser::ParseStatementOrDeclaration(clang::ASTOwningVector<clang::Stmt*, 32u>&, bool) + 3113
12 clang            0x08420484 clang::Parser::ParseCompoundStatementBody(bool) + 1652
13 clang            0x08420de4 clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) + 164
14 clang            0x08440411 clang::Parser::ParseLexedMethodDef(clang::Parser::LexedMethod&) + 625
15 clang            0x08440e12 clang::Parser::LexedMethod::ParseLexedMethodDefs() + 34
16 clang            0x08440116 clang::Parser::ParseLexedMethodDefs(clang::Parser::ParsingClass&) + 134
17 clang            0x08461a00 clang::Parser::ParseCXXMemberSpecification(clang::SourceLocation, unsigned int, clang::Decl*) + 1472
18 clang            0x0846302d clang::Parser::ParseClassSpecifier(clang::tok::TokenKind, clang::SourceLocation, clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, bool) + 3341
19 clang            0x0844ffdd clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) + 2237
20 clang            0x08438876 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::Parser::ParsingDeclSpec&, clang::AccessSpecifier) + 134
21 clang            0x08439026 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributes&, clang::AccessSpecifier) + 742
22 clang            0x0843b276 clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::Parser::ParsingDeclSpec*) + 3670
23 clang            0x0843b9c4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) + 180
24 clang            0x0840e628 clang::ParseAST(clang::Sema&, bool) + 296
25 clang            0x081ec687 clang::ASTFrontendAction::ExecuteAction() + 103
26 clang            0x082e0f22 clang::CodeGenAction::ExecuteAction() + 66
27 clang            0x081ecfd3 clang::FrontendAction::Execute() + 275
28 clang            0x081d3895 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 325
29 clang            0x081bb526 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 1126
30 clang            0x081b3e30 cc1_main(char const**, char const**, char const*, void*) + 912
31 clang            0x081b13bd main + 653
32 libc.so.6        0x414ca4d3 __libc_start_main + 243
33 clang            0x081b394d
Stack dump:
0.	Program arguments: /usr/bin/clang -cc1 -triple i386-pc-linux-gnu -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -main-file-name main.cpp -mrelocation-model static -mdisable-fp-elim -masm-verbose -mconstructor-aliases -target-cpu pentium4 -target-linker-version 2.22 -momit-leaf-frame-pointer -coverage-file main.o -resource-dir /usr/bin/../lib/clang/3.0 -fmodule-cache-path /var/tmp/clang-module-cache -internal-isystem /usr/include/c++/4.6 -internal-isystem /usr/include/c++/4.6/i686-linux-gnu -internal-isystem /usr/include/c++/4.6/backward -internal-isystem /usr/local/include -internal-isystem /usr/bin/../lib/clang/3.0/include -internal-externc-isystem /usr/include/i686-linux-gnu -internal-externc-isystem /usr/include -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -ferror-limit 19 -fmessage-length 0 -fgnu-runtime -fobjc-runtime-has-arc -fobjc-runtime-has-weak -fobjc-fragile-abi -fcxx-exceptions -fexceptions -fdiagnostics-show-option -o main.o -x c++ main.cpp 
1.	main.cpp:28:60: current parser token ')'
2.	main.cpp:8:1: parsing struct/union/class body 'ThreadPool'
3.	main.cpp:25:5: parsing function body 'submit'
4.	main.cpp:25:5: in compound statement ('{}')
clang: error: unable to execute command: Segmentation fault (core dumped)
clang: error: clang frontend command failed due to signal 2 (use -v to see invocation)
clang: note: diagnostic msg: Please submit a bug report to http://llvm.org/bugs/ and include command line arguments and all diagnostic information.
clang: note: diagnostic msg: Preprocessed source(s) are located at:
clang: note: diagnostic msg: /tmp/main-a3M7Hy.ii
make: *** [main.o] Error 254
